{
  "src/lib/components/appasidetoggler.react.js": {
    "description": "CoreUI aside toggler component.",
    "displayName": "appasidetoggler",
    "methods": [
      {
        "name": "toggle",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "force",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "asideToggle",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children, defaults to  `<span className=\"navbar-toggler-icon\" />`."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebartoggler`.",
        "defaultValue": {
          "value": "'appasidetoggler'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `navbar-toggler`."
      },
      "defaultOpen": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The default open flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "display": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The display bootstrap class, defaults to `lg`.",
        "defaultValue": {
          "value": "'lg'",
          "computed": false
        }
      },
      "mobile": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The mobile mode flag, default to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `button`.",
        "defaultValue": {
          "value": "'button'",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The HTML type, defauls to `button`.",
        "defaultValue": {
          "value": "'button'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appfooter.react.js": {
    "description": "CoreUI footer component.",
    "displayName": "appfooter",
    "methods": [
      {
        "name": "isFixed",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "fixed",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appfooter`.",
        "defaultValue": {
          "value": "'appfooter'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `app-footer`."
      },
      "fixed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The fixed flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `footer`.",
        "defaultValue": {
          "value": "'footer'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appheader.react.js": {
    "description": "CoreUI header component.",
    "displayName": "appheader",
    "methods": [
      {
        "name": "isFixed",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "fixed",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appheader`.",
        "defaultValue": {
          "value": "'appheader'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name."
      },
      "fixed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Wether the header is fixed, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `header`.",
        "defaultValue": {
          "value": "'header'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appheaderdropdown.react.js": {
    "description": "CoreUI header dropdown menu component.",
    "displayName": "appheaderdropdown",
    "methods": [
      {
        "name": "toggle",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appheaderdropdown`.",
        "defaultValue": {
          "value": "'appheaderdropdown'",
          "computed": false
        }
      },
      "direction": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The dropdown direction, defaults to `down`.",
        "defaultValue": {
          "value": "'down'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appnavbarbrand.react.js": {
    "description": "CoreUI navbar brand component.",
    "displayName": "appnavbarbrand",
    "methods": [
      {
        "name": "imgSrc",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "brand",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "imgWidth",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "brand",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "imgHeight",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "brand",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "imgAlt",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "brand",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "navbarBrandImg",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "classBrand",
            "type": null
          },
          {
            "name": "key",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `a`.",
        "defaultValue": {
          "value": "'a'",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children, defaults to `<img src width height alt className/>`."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appnavbarbrand`.",
        "defaultValue": {
          "value": "'appnavbarbrand'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `navbar-brand`."
      },
      "brand": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The brand image, given as `{src, width, height, alt, className: 'navbar-brand' }`."
      },
      "full": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The full size brand image, given as `{src, width, height, alt, className: 'navbar-brand-full' }`."
      },
      "minimized": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The minimized brand image, given as `{src, width, height, alt, className: 'navbar-brand-minimized' }`."
      }
    }
  },
  "src/lib/components/appsidebar.react.js": {
    "description": "CoreUI sidebar component.",
    "displayName": "appsidebar",
    "methods": [
      {
        "name": "isCompact",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "compact",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "isFixed",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "fixed",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "isMinimized",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "minimized",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "isOffCanvas",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "offCanvas",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "displayBreakpoint",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "display",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "hideMobile",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "onClickOut",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children, supports `appsidebarfooter`, `appsidebarform`, `appsidebarheader`, `appsidebarminimizer`, and `appsidebarnav`."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebar`.",
        "defaultValue": {
          "value": "'appsidebar'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `sidebar`."
      },
      "compact": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The compact flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "display": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The display bootstrap class.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "fixed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The fixed flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "minimized": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The minimized flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "isOpen": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The isOpen flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "offCanvas": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The offCanvas flag, defaults to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "staticContext": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "TODO document this."
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `div`.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appsidebarheader.react.js": {
    "description": "CoreUI sidebar header component.",
    "displayName": "appsidebarheader",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebarheader`.",
        "defaultValue": {
          "value": "'appsidebarheader'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `sidebar-header`."
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `div`.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/appsidebartoggler.react.js": {
    "description": "CoreUI sidebar toggler component.",
    "displayName": "appsidebartoggler",
    "methods": [
      {
        "name": "sidebarToggle",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggle",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "force",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children, defaults to  `<span className=\"navbar-toggler-icon\" />`."
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks, defaults to `appsidebartoggler`.",
        "defaultValue": {
          "value": "'appsidebartoggler'",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The CSS class name, defaults to `navbar-toggler`."
      },
      "display": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The display bootstrap class, defaults to `lg`.",
        "defaultValue": {
          "value": "'lg'",
          "computed": false
        }
      },
      "mobile": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "The mobile mode flag, default to `false`.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "tag": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "func"
            },
            {
              "name": "string"
            }
          ]
        },
        "required": false,
        "description": "The HTML tag, defaults to `button`.",
        "defaultValue": {
          "value": "'button'",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The HTML type, defauls to `button`.",
        "defaultValue": {
          "value": "'button'",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/firstapp.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "appheader",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  }
}